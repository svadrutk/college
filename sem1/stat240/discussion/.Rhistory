facet_grid(. ~ cyl)
# left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
# right
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
# left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
# right
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
library(tidyverse)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter")
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_flip()
bar + coord_polar()
ggplot(produce, aes(x=quantity, y=price)) +
geom_point(shape = "type")
ggplot(data=diamonds, aes(x=cut, y=clarity)) +
geom_point(shape = "type")
ggplot(data=diamonds, aes(x=cut, y=clarity)) +
geom_point(aes(shape = type)
dfa
ggplot(data=diamonds, aes(x=cut, y=clarity)) +
geom_point(aes(shape = type))
?geom_smooth
ggplot(data=diamonds, aes(x=cut, y=clarity)) +
geom_bar(stat = "count")
ggplot(data=diamonds, aes(x=cut, y=clarity)) +
geom_bar(stat = "identity")
ggplot(data=diamonds, aes(x=cut, y=clarity)) +
geom_bar(stat = "count")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(lubridate)
z = r/sd(r)
sd(y)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(lubridate)
sum(1:100)
set.seed(20210910)
v2 = runif(10)
v2
v2_a = v2/sum(v2)
sum(v2_a)
x = rnorm(100)
sum(x^2)
mendota = read_csv("../../data/lake-mendota-winters-2021.csv")
y = mendota$duration
mean(y)
r = y - 102.0422
r = y - 102.0422
mean(r)
sd(r)
sd(y)
z = r/sd(r)
z = r/sd(r)
mean(z)
median(z)
sd(z)
v2_a = v2/sum(v2)
v2_a
max(v2_a)
sd(v2_a)
sum(v2_a)
library(scales)
install.packages("scales")
install.packages("lubridate")
flights
library(nycflights13)
library(tidyverse)
library(nycflights13)
library(tidyverse)
flights
library(n)
?flights
??flights
nycflights13
library(dplyr)
library(nycflights13)
library(anyflights)
library(dplyr)
library(nycflights13)
library(tidyverse)
install.packages("nycflights13")
?flights
?flights
library(nycflights13)
library(nycflights13)
?flights
?flights
flights
filter(flights, month == 1, day == 1)
#> # A tibble: 842 x 19
#>    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
#>   <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>
#> 1  2013     1     1      517            515         2      830            819
#> 2  2013     1     1      533            529         4      850            830
#> 3  2013     1     1      542            540         2      923            850
#> 4  2013     1     1      544            545        -1     1004           1022
#> 5  2013     1     1      554            600        -6      812            837
#> 6  2013     1     1      554            558        -4      740            728
#> # â€¦ with 836 more rows, and 11 more variables: arr_delay <dbl>, carrier <chr>,
#> #   flight <int>, tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>,
#> #   distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>
jan1 <- filter(flights, month == 1, day == 1)
jan1
(dec25 <- filter(flights, month == 12, day == 25))
month = 12 | month = 2 | month = 5
(month = 12) | (month = 2) | (month = 5)
flights %>% select(month, day)
flights %>% select(-dep_time, -sched_dep_time, -dep_delay, -arr_time)
?select
flights %>% select(-dep_time, -sched_dep_time, -dep_delay, -arr_time, -sched_arr_time,-arr_delay, -carrier, -flight, -tailnum, -origin)
flights %>% select(-dep_time, everything())
flights %>% filter(sched_dep_time=515)
flights %>% filter(sched_dep_time==515)
flights %>% filter(dest==ORD)
flights %>% filter(dest=="ORD")
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(xlab="Days Closed with Ice", color="forestgreen")
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
## The echo = FALSE argument to this chunk
##   means that the code will not appear in the output
##   but the code will run so that the data is in the session
## Read Lake Monona data
## Remove rows with missing data
monona = read_csv("../../data/lake-monona-winters-2021.csv") %>%
drop_na()
ggplot(monona, aes(x=duration)) +
geom_histogram(boundary=0, binwidth=10, color="black", fill="white")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(main="Winters in Lake Monona", xlab="Days Closed with Ice",ylab="Total", fill="forestgreen", color="darkviolet", binwidth=5)
## Fit the model
fit = lm(duration ~ year1, data = monona)
## Add fitted values and residuals to the data set
monona = monona %>%
mutate(fitted = fitted(fit),
residuals = residuals(fit))
## add winter_day = #days of first freeze after June 30
monona = monona %>%
mutate(winter_day = as.numeric(
first_freeze - ymd(str_c(year1,"-06-30"))))
## Make the histogram
ggplot(monona, aes(x = winter_day)) +
geom_histogram(binwidth = 5, center = 154, color = "darkviolet", fill = "forestgreen") +
xlab("Days after June 30") +
ylab("Count") +
ggtitle("Lake Monona First Freeze Distribution",
subtitle = "1851 - 2021")
## Note: the file begins with 100 comment lines which we skip
exo = read_csv("../../data/exoplanets_default_2021-06-15.csv", skip = 100) %>%
select(pl_name, hostname, discoverymethod, pl_bmasse) %>%
rename(planet = pl_name,
star = hostname,
method = discoverymethod,
mass = pl_bmasse) %>%
drop_na(mass)
ggplot(exo, aes(x = method, y = mass)) +
geom_boxplot()
## You may need to install the scales package if the next line causes an error
library(scales)
## Make the side-by-side boxplots
ggplot(exo, aes(x = method, y = mass)) +
geom_boxplot() +
## (A) What does the following line do?
scale_y_continuous(trans = "log10", label = comma) +
xlab("Method of Detection") +
ylab("Mass (Earth masses)") +
## (B) What does the following line do?
coord_flip()
knitr::opts_chunk$set(echo=TRUE,  message=FALSE, warning=FALSE, cache=TRUE,
autodep=TRUE, cache.comments=FALSE)
library(tidyverse)
library(lubridate)
library(scales)
## Read in the data
## Specify the type
## This is needed to avoid issues for columns where first 1000 rows are all missing
##   and the type is set to logical
mw_original = read_csv("../../data/madison-weather-2020.csv",
col_types = cols(
STATION = col_character(),
NAME = col_character(),
LATITUDE = col_double(),
LONGITUDE = col_double(),
ELEVATION = col_double(),
DATE = col_date(format = ""),
PRCP = col_double(),
SNOW = col_double(),
SNWD = col_double(),
TAVG = col_double(),
TMAX = col_double(),
TMIN = col_double()))
dim(mw_original)
head(mw_original)
View(mw_original)
View(mw_original)
pain <- read.csv("~/Documents/pain.csv")
View(pain)
produce <- read.csv("~/Documents/produce.csv")
View(produce)
produce %>%
group_by(type) %>%
mutate(diff = max(price) - price)
library(dplyr)
produce %>%
group_by(type) %>%
mutate(diff = max(price) - price)
library(tidyverse)
produce %>%
group_by(type) %>%
summarize(max = max(price)
eifj
produce %>%
group_by(type) %>%
summarize(max = max(price))
produce %>%
mutate( unit_price = price / quantity )
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(main="Winters in Lake Monona", fill="forestgreen", color="darkviolet", binwidth=5) + xlab("fdfdf")
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
## The echo = FALSE argument to this chunk
##   means that the code will not appear in the output
##   but the code will run so that the data is in the session
## Read Lake Monona data
## Remove rows with missing data
monona = read_csv("../../data/lake-monona-winters-2021.csv") %>%
drop_na()
ggplot(monona, aes(x=duration)) +
geom_histogram(boundary=0, binwidth=10, color="black", fill="white")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(main="Winters in Lake Monona", fill="forestgreen", color="darkviolet", binwidth=5) + xlab("fdfdf")
## Fit the model
fit = lm(duration ~ year1, data = monona)
## Add fitted values and residuals to the data set
monona = monona %>%
mutate(fitted = fitted(fit),
residuals = residuals(fit))
## add winter_day = #days of first freeze after June 30
monona = monona %>%
mutate(winter_day = as.numeric(
first_freeze - ymd(str_c(year1,"-06-30"))))
## Make the histogram
ggplot(monona, aes(x = winter_day)) +
geom_histogram(binwidth = 5, center = 154, color = "darkviolet", fill = "forestgreen") +
xlab("Days after June 30") +
ylab("Count") +
ggtitle("Lake Monona First Freeze Distribution",
subtitle = "1851 - 2021")
## Note: the file begins with 100 comment lines which we skip
exo = read_csv("../../data/exoplanets_default_2021-06-15.csv", skip = 100) %>%
select(pl_name, hostname, discoverymethod, pl_bmasse) %>%
rename(planet = pl_name,
star = hostname,
method = discoverymethod,
mass = pl_bmasse) %>%
drop_na(mass)
ggplot(exo, aes(x = method, y = mass)) +
geom_boxplot()
## You may need to install the scales package if the next line causes an error
library(scales)
## Make the side-by-side boxplots
ggplot(exo, aes(x = method, y = mass)) +
geom_boxplot() +
## (A) What does the following line do?
scale_y_continuous(trans = "log10", label = comma) +
xlab("Method of Detection") +
ylab("Mass (Earth masses)") +
## (B) What does the following line do?
coord_flip()
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(main="Winters in Lake Monona", fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(main="Winters in Lake Monona", fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total") + main("Lake Monona Winters")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(main="Winters in Lake Monona", fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total") + main("Lake Monona Winters")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(main="Winters in Lake Monona", fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total") + geom_title("Lake Monona Winters")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(main="Winters in Lake Monona", fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total") + ggtitle("Lake Monona Winters")
ggplot(year1, duration)
ggplot(monona, aes(x=year1, y=duration))
ggplot(monona, aes(x=year1, y=duration)) +
geom_line()
ggplot(monona, aes(x=year1, y=duration)) +
geom_line()+geom_smooth()
ggplot(monona, aes(x=year1, y=duration)) +
geom_line()+geom_smooth()+geom_smooth(method="lm",color=red)
ggplot(monona, aes(x=year1, y=duration)) +
geom_line()+geom_smooth()+geom_smooth(method="lm",color="red")
ggplot(monona, x=year1, y=residuals)
## Fit the model
fit = lm(duration ~ year1, data = monona)
## Add fitted values and residuals to the data set
monona = monona %>%
mutate(fitted = fitted(fit),
residuals = residuals(fit))
ggplot(monona, x=year1, y=residuals)+geom_line()
ggplot(monona, aes(x=year1, y=residuals))+geom_line()
ggplot(monona, aes(x=year1, y=residuals))
ggplot(monona, aes(x=year1, y=residuals)) + geom_line() + geom_hline(yintercept=0)
ggplot(monona, aes(x=year1, y=residuals)) + geom_line() + geom_hline(yintercept=0)+geom_smooth()
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
## Make the histogram
ggplot(monona, aes(x=year1, y=winter_day))
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(lubridate)
## The echo = FALSE argument to this chunk
##   means that the code will not appear in the output
##   but the code will run so that the data is in the session
## Read Lake Monona data
## Remove rows with missing data
monona = read_csv("../../data/lake-monona-winters-2021.csv") %>%
drop_na()
ggplot(monona, aes(x=duration)) +
geom_histogram(boundary=0, binwidth=10, color="black", fill="white")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total") + ggtitle("Winters in Lake Monona")
ggplot(monona, aes(x=year1, y=duration)) +
geom_line()+geom_smooth()+geom_smooth(method="lm",color="red")
## Fit the model
fit = lm(duration ~ year1, data = monona)
## Add fitted values and residuals to the data set
monona = monona %>%
mutate(fitted = fitted(fit),
residuals = residuals(fit))
ggplot(monona, aes(x=year1, y=residuals)) + geom_line() + geom_hline(yintercept=0)+geom_smooth()
## add winter_day = #days of first freeze after June 30
monona = monona %>%
mutate(winter_day = as.numeric(
first_freeze - ymd(str_c(year1,"-06-30"))))
## Make the histogram
ggplot(monona, aes(x=year1, y=winter_day))
ggplot(monona, aes(x = winter_day)) +
geom_histogram(binwidth = 5, center = 154, color = "darkviolet", fill = "forestgreen") +
xlab("Days after June 30") +
ylab("Count") +
ggtitle("Lake Monona First Freeze Distribution",
subtitle = "1851 - 2021")
## Note: the file begins with 100 comment lines which we skip
exo = read_csv("../../data/exoplanets_default_2021-06-15.csv", skip = 100) %>%
select(pl_name, hostname, discoverymethod, pl_bmasse) %>%
rename(planet = pl_name,
star = hostname,
method = discoverymethod,
mass = pl_bmasse) %>%
drop_na(mass)
ggplot(exo, aes(x = method, y = mass)) +
geom_boxplot()
## You may need to install the scales package if the next line causes an error
library(scales)
## Make the side-by-side boxplots
ggplot(exo, aes(x = method, y = mass)) +
geom_boxplot() +
## (A) What does the following line do?
scale_y_continuous(trans = "log10", label = comma) +
xlab("Method of Detection") +
ylab("Mass (Earth masses)") +
## (B) What does the following line do?
coord_flip()
## Make the histogram
ggplot(monona, aes(x=year1, y=winter_day)) +
geom_histogram(binwidth = 5, fill="cadetblue1", color="cadetblue")
rlang::last_error()
## Make the histogram
ggplot(monona, aes(x=winter_day)) +
geom_histogram(binwidth = 5, fill="cadetblue1", color="cadetblue")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(fill="forestgreen", color="darkviolet", binwidth=5, center=70) + xlab("Days Closed with Ice") + ylab("Total") + ggtitle("Winters in Lake Monona")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total") + ggtitle("Winters in Lake Monona")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(fill="forestgreen", color="darkviolet", binwidth=5, center=0) + xlab("Days Closed with Ice") + ylab("Total") + ggtitle("Winters in Lake Monona")
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(fill="forestgreen", color="darkviolet", binwidth=5, boundary=0) + xlab("Days Closed with Ice") + ylab("Total") + ggtitle("Winters in Lake Monona")
## Make the histogram
ggplot(monona, aes(x=winter_day)) +
geom_histogram(binwidth = 5, fill="cadetblue1", color="cadetblue",center=154)
## Make the histogram
ggplot(monona, aes(x=winter_day)) +
geom_histogram(binwidth = 5, fill="cadetblue1", color="cadetblue",center=154) +xlab("Winter Days")+ylab("Frequency")+title("Frequency of Winter Days")
## Make the histogram
ggplot(monona, aes(x=winter_day)) +
geom_histogram(binwidth = 5, fill="cadetblue1", color="cadetblue",center=154) +xlab("Winter Days")+ylab("Frequency")
## Make the histogram
ggplot(monona, aes(x=winter_day)) +
geom_histogram(binwidth = 5, fill="cadetblue1", color="cadetblue",center=154) +xlab("Winter Days")+ylab("Frequency")+ggtitle("Frequency of Days that Lake Monona has Frozen since June 30th")
## Make the histogram
ggplot(monona, aes(x=winter_day)) +
geom_histogram(binwidth = 5, fill="cadetblue1", color="cadetblue",center=154) +xlab("Winter Days")+ylab("Frequency")+ggtitle("Days Lake Monona has Frozen since June 30th")
ggplot(monona, aes(x=year1, y=residuals)) + geom_point() + geom_hline(yintercept=0)+geom_smooth()
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(center=70, fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total") + ggtitle("Winters in Lake Monona")
ggplot(monona, aes(x=year1, y=residuals)) + geom_point() + geom_hline(yintercept=0)+geom_smooth()
## modify this code
ggplot(monona, aes(x = duration)) +
geom_histogram(center=70,fill="forestgreen", color="darkviolet", binwidth=5) + xlab("Days Closed with Ice") + ylab("Total") + ggtitle("Winters in Lake Monona")
ggplot(monona, aes(x = winter_day)) +
geom_histogram(binwidth = 5, center = 154, color = "darkviolet", fill = "forestgreen") +
xlab("Days after June 30") +
ylab("Count") +
ggtitle("Lake Monona First Freeze Distribution",
subtitle = "1851 - 2021") + scale_x_continuous(breaks=seq(154,214,by=15),labels = c("Dec 1", "Dec 16", "Dec 31", "Jan 15", "Jan 30"))
ggplot(exo, aes(x=mass)) +
ggplot(exo, aes(x=mass)) +
geom_density(color="black", fill="purple")
ggplot(exo, aes(x=mass)) +
geom_density(color="black", fill="purple") +
xlab("Mass") + ylab("Frequency")
ggplot(exo, aes(x=mass)) +
geom_density(color="black", fill="purple") +
xlab("Mass") + ylab("Frequency") + ggtitle("Mass of Exoplanets")
View(exo)
View(exo)
ggplot(exo, aes(x=mass,y=count())) +
geom_density(color="black", fill="purple") +
xlab("Mass") + ylab("Frequency") + ggtitle("Mass of Exoplanets")
ggplot(exo, aes(x=mass) +
geom_density(color="black", fill="purple") +
xlab("Mass") + ylab("Frequency") + ggtitle("Mass of Exoplanets")
ggplot(exo, aes(x=mass)) +
geom_density(color="black", fill="purple") +
xlab("Mass") + ylab("Frequency") + ggtitle("Mass of Exoplanets")
View(exo)
View(exo)
ggplot(exo, aes(x=mass)) +
geom_density(color="black", fill="purple") +
xlab("Mass") + ylab("Frequency") + ggtitle("Mass of Exoplanets") + scale_x_continuous(trans = "log10", label = comma)
ggplot(exo, aes(x=mass)) +
geom_density(color="black", fill="purple") +
xlab("Mass") + ylab("Frequency") + ggtitle("Mass of Exoplanets")
ggplot(exo, aes(x=mass)) +
geom_density(color="black", fill="purple") +
xlab("Mass") + ylab("Frequency") + ggtitle("Mass of Exoplanets") +
scale_x_continuous(trans = "log10", label = comma)
flights
library(tidyverse)
parse_number("$1.234,56", locale = locale(grouping_mark = ".", decimal_mark = ","))
setwd("~/College/stat240/discussion")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
## Read in the csv files for all planets
## There is one row for each exoplanet publication
## Note that the file begins with a number of comment lines which we skip
planets = read_csv("../data/exoplanets_default_2021-06-15.csv",
skip = 100) %>%
select(pl_name, hostname, discoverymethod, disc_year, sy_pnum, pl_rade, pl_bmasse) %>%
rename(planet = pl_name,
star = hostname,
method = discoverymethod,
year = disc_year,
number = sy_pnum,
radius = pl_rade,
mass = pl_bmasse)
### Add code here as needed to address the questions.
View(planets)
View(planets)
summary(planets)
as_tibble(method = planets$method, count = planets$count)
select(planets, method)
select(planets, method, count)
select(planets, method)
