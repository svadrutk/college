knitr::opts_chunk$set(echo = TRUE)
Thickness<-c(90.0, 92.2, 94.9, 92.7, 91.6, 88.2, 92.0, 98.2, 96.0, 91.1, 89.8, 91.5, 91.5, 90.6, 93.1, 88.9, 92.5, 92.4)
Thickness
length(Thickness)
sort(Thickness)
Thickness<-sort(Thickness, decreasing=FALSE)
#Thickness <-sort(Thickness , decreasing = TRUE)
Thickness
#Dotplot
stripchart(Thickness)
stripchart(Thickness, method="stack", main="Thickness Value")
stripchart(Thickness, method="stack", main="Thickness Values", xlim=c(85, 100))
#default hist is frequency and bins set for us
hist(Thickness)
hist(Thickness, labels=TRUE)
hist(Thickness, labels=TRUE, ylim=c(0,7))
hist(Thickness, breaks=seq(86,100,2), labels=TRUE, ylim=c(0,10))
hist(Thickness, breaks=seq(86,100,1), labels=TRUE, ylim=c(0,6))
#Relative freq hist
h<-hist(Thickness, plot=FALSE)
h$counts<-h$counts/length(Thickness)  #note: length(Thickness) is 18
plot(h, ylab="Relative Frequency", labels=FALSE, ylim=c(0,1))
#Density histogram will become more useful when we have data sets with a larger number of unique observations
hist(Thickness, freq=FALSE)
boxplot(Thickness, horizontal=TRUE, xlab="Thicknesses (Ã…)")
text(x=fivenum(Thickness), labels=fivenum(Thickness), y=1.25)
quantile(Thickness, type=2)
mtcars
ncol(mtcars)
knitr::opts_chunk$set(echo = TRUE, out.width="50%", out.height="50%")
currentBox$stats
knitr::opts_chunk$set(echo = TRUE, out.width="50%", out.height="50%")
error.data=c(rep(0,42), rep(1,30), rep(2,16), rep(3,7), rep(4, 5))
hist(error.data,
breaks=c(seq(from=-0.5, 4.5, by=1)),
xlab="Defects", main="Number of Defects",
labels=TRUE, ylim=c(0,60))
print(mean(error.data))
print(median(error.data))
print(sd(error.data))
boxplot(error.data, pch=20, whisker.width=0.5, main="Errors in Disks", horizontal = TRUE, xlab = "Number of Errors")
currentModel = c(1.63, 1.25, 1.23, 1.49, 2.11, 1.48, 1.94, 1.72, 1.85, 1.54, 1.67, 1.76, 1.46, 1.32, 1.23, 1.67, 1.74, 1.63, 1.25, 1.56)
newModel = c(1.28, 1.19, 0.90, 1.24, 1.00, 0.80, 0.71, 1.03, 1.27, 1.14, 1.36, 0.91, 1.09, 1.36, 0.91, 0.91, 0.86, 0.93, 1.36)
hist(currentModel,
breaks=c(seq(from=0.5, 2.5, by=0.1)),
xlab="Gallons of Water/Flush", ylab="Number of Toilets", main="Current Model Flush Rate",
labels=TRUE, ylim=c(0,10))
hist(newModel,
breaks=c(seq(from=0.5, 2.5, by=0.1)),
xlab="Gallons of Water/Flush", ylab="Number of Toilets", main="New Model Flush Rate",
labels=TRUE, ylim=c(0,10))
median(currentModel)
mean(currentModel)
median(newModel)
mean(newModel)
sd(currentModel)
sd(newModel)
currentBox = boxplot(currentModel, pch=20, whisker.width=0.5, main="Current Model", horizontal = TRUE, xlab = "Number of Gallons")
newBox = boxplot(newModel, pch=20, whisker.width=0.5, main="New Model", horizontal = TRUE, xlab = "Number of Gallons")
currentBox$stats
Children=c(rep(1, 47), rep(2, 70), rep(3, 45), rep(4, 23), rep(5,11), rep(6,5), rep(7,2))
hist(Children,
breaks=seq(0.5, 7.5, 1),
labels=TRUE,
ylim=c(0,80),
main="Number of Children in Household",
ylab="Number of Households")
newData = c(currentModel, newModel)
newData = c(currentModel, newModel)
newData
newData = c(currentModel, newModel)
mean(newData)
median(newData)
newData = c(currentModel, newModel)
mean(newData)
median(newData)
# Now calculate the new mean by adding the two means from part (c) and dividing by 2.
(1.5765 + 1.065789)/2
Children=c(rep(1, 47), rep(2, 70), rep(3, 45), rep(4, 23), rep(5,11), rep(6,5), rep(7,2))
hist(Children,
breaks=seq(0.5, 7.5, 1),
labels=TRUE,
ylim=c(0,80),
main="Number of Children in Household",
ylab="Number of Households")
47 + 70 + 45 + 23 + 11 + 7
45  +23 + 11 + 7
86/203
(47/203) * (46/202) * (45/201) * (44/200) * (43/199)
324 - 311.58
(1.5765 * 20 + 1.065789 * 19)/39
newData = c(currentModel, newModel)
mean(newData)
median(newData)
# Now calculate the new mean by adding the two means from part (c) and dividing by 2.
(1.5765 * 20 + 1.065789 * 19)/39
mean(currentModel)
median(currentModel)
mean(newModel)
median(newModel)
